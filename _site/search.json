[{ "title": "linux的QQ/微信使用快捷键", "url": "/manjaro-deepin-wine-wechat.html", "category":"wiki", "date":"2019-10-26 00:00:00 +0800", "thumb":"/img/in-post/thumbs/wiki.png?imageView2/1/w/140/h/140/q/90", "tags":["wechat","qq","xdotool","linux","wiki"], "images":0, "content":"前言虽然deepin-wine封装了qq和微信，但是没有快捷键，依旧很不好用，因此琢磨了好久，终于使用xdotool解决了快捷键的问题原理xdotool是一款模拟键盘操作的软件，因此可以使用xdotool来模拟键盘，完成快捷键的转发操作过程安装xdotool本文提供manjaro的安装方式如下，其他linux系统请自行搜索sudo pacman -S xdotool测试微信和tim的模拟状态xdotool key --window $(xdotool search --name 'tim' | head -n1) ctrl+alt+xxdotool key --window $(xdotool search --limit 1 --all --pid $(pgrep WeChat.exe)) ctrl+alt+w后面三个组合键要看自己的tim提取消息的快捷键是啥，注意微信和QQ的搜索形式不同正常情况下，如果QQ和微信的快捷键对的话，就可以打开QQ或者微信的消息框了编写脚本并赋权在自己的目录下编写.sh的脚本，博主分别在自己个人目录下创建了wechat.sh和tim.sh文件，分别将上述的命令写入，可以直接./wechat.sh执行，如果权限不够，使用下面命令行提权sudo chmod 777 wechat.sh然后再执行，正确的话，就可以进行快捷键绑定了绑定快捷键file finder–&gt;keyboard–&gt;shortcuts–&gt;add–&gt;选择刚刚的脚本–&gt;save–&gt;输入快捷键（可自定义）说明以上就是tim/wechat的linux环境下快捷键的绑定，但是wechat好像存在一个问题，就是退出的时候，其实进程并没有kill掉，需要手动kill，否则再次打开微信的时候，快捷键不能生效另外，微信在deepin-wine为4.7版本下，不能输入中文输入法，需要把deepin-wine版本降为4.6，可以使用下面命令进行降级wget https://archive.archlinux.org/packages/w/wine/wine-4.16-1-x86_64.pkg.tar.xz# 也可以进入到官方网址：https://archive.archlinux.org/packages/w/wine/ 手动下载sudo pacman -U wine-4.16-1-x86_64.pkg.tar.xz" }, { "title": "manjaro操作系统知识库", "url": "/manjaro-wiki.html", "category":"wiki", "date":"2019-10-24 00:00:00 +0800", "thumb":"/img/in-post/thumbs/linux.png?imageView2/1/w/140/h/140/q/90", "tags":["manjaro","linux","wiki"], "images":0, "content":"前言最近卸载了ubuntu，安装了manjaro，简直不要太好用，安装软件真的不要太简单，现在就把一些常用的记录下来，没有从开始记录，有点遗憾，后面再补吧更换国内源manjaro使用国外源，很慢，所以需要替换国内比较快速的源，操作步骤如下sudo pacman-mirrors -i -c China -m rank# 选择其中一个即可，我一般选择中科大或者交大的源，因为离得近。sudo vi /etc/pacman.conf # 在文件末尾添加以下内容 添加软件源的地址[archlinuxcn]SigLevel = Optional TrustedOnlyServeorngr = https://mirrors.ustc.edu.cn/archlinuxcn/$arch# 更新缓存sudo pacman -Syy# 安装archlinuxcn-keyring包，导入GPGKeysudo pacman -S archlinuxcn-keyring# 安装更新sudo pacman -R thunar-archive-pluginsudo pacman -Syyu# 安装yaourt,这个是很多非官方的野包，可以通过这个来安装，比如QQ，微信sudo pacman -S yaourtmysql安装过程sudo pacman -S mysql# 初始化MySQL，记住输出的root密码sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql# 设置开机启动MySQL服务systemctl enable mysqld.servicesystemctl daemon-reloadsystemctl start mysqld.service# 使用MySQL前必须修改root密码，MySQL 8.0.15不能使用set password修改密码mysql -u root -pmysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码';# 完成electron-ssr安装在add/remove application中搜索electron-ssr即可，然后安装设置开机自启动sudo ln -s /usr/share/applications/electron-ssr.desktop /etc/xdg/autostart/相关资料ssr免费地址gfwlist地址switchOmega谷歌插件地址谷歌插件配置proxy选择socks5协议，server填写127.0.0.1，端口填写1080，应用auto switch中删除所有的switch rules，在rule list config中填写gfwlist中的过滤地址，download profile now按钮，下载过滤地址，格式选择AutoProxy在Switch rules中将规则列表中使用proxy模式，其他使用直接模式，保存应用即可。electron-ssr中直接根据ssr免费地址中的信息填写即可。wechat/微信yaourt -S deepin-wine-wechatTIM/QQyaourt -S deepin-wine-tim #安装timyaourt -S deepin.wine.qq.office #安装qqNodeJS安装NodeJSpacman -Ss nodejs-lts //查看nodejs长期支持版sudo pacman -S nodejs-lts-dubnium //选择其中一个版本进行安装npm -v//查看安装成功没有，如果没有成功执行下条命令sudo pacman -S npm配置npmnpm config list //查看npm配置npm config set prefix \"{global_dir}\"//设置全局npm安装路径npm config set cache \"\" //设置全局缓存路径npm config set registry https://registry.npm.taobao.org //设置淘宝镜像源以上的set改成get可以查看配置的参数如果需要在bash或者zsh执行npm安装的组件，需要添加把刚刚的全局安装路径下的bin目录添加到环境变量vim ~/.zshrc//bash就是.bashrcexport PATH=\"{global_dir}/bin:$PATH\"//添加到环境变量source ~/.zshrcvue初始化npm install -g vue-cli//vue手脚架vue init webpack my-project //使用webpack模板初始化cd my-projectnpm install //安装依赖的组件npm run dev //运行项目，用浏览器打开http://localhost:8080beyond compare下载beyond compare下载地址安装tar -zxvf bcompare-4.3.1.24438.x86_64.tar.gzcd bcompare-4.3.1.24438./install.sh//根据提示输入安装路径{install_dir}破解cd {install_dir}/lib64/beyondcompare输入以下命令sudo sed -i \"s/keexjEP3t4Mue23hrnuPtY4TdcsqNiJL-5174TsUdLmJSIXKfG2NGPwBL6vnRPddT7tH29qpkneX63DO9ECSPE9rzY1zhThHERg8lHM9IBFT+rVuiY823aQJuqzxCKIE1bcDqM4wgW01FH6oCBP1G4ub01xmb4BGSUG6ZrjxWHJyNLyIlGvOhoY2HAYzEtzYGwxFZn2JZ66o4RONkXjX0DF9EzsdUef3UAS+JQ+fCYReLawdjEe6tXCv88GKaaPKWxCeaUL9PejICQgRQOLGOZtZQkLgAelrOtehxz5ANOOqCaJgy2mJLQVLM5SJ9Dli909c5ybvEhVmIC0dc9dWH+/N9KmiLVlKMU7RJqnE+WXEEPI1SgglmfmLc1yVH7dqBb9ehOoKG9UE+HAE1YvH1XX2XVGeEqYUY-Tsk7YBTz0WpSpoYyPgx6Iki5KLtQ5G-aKP9eysnkuOAkrvHU8bLbGtZteGwJarev03PhfCioJL4OSqsmQGEvDbHFEbNl1qJtdwEriR+VNZts9vNNLk7UGfeNwIiqpxjk4Mn09nmSd8FhM4ifvcaIbNCRoMPGl6KU12iseSe+w+1kFsLhX+OhQM8WXcWV10cGqBzQE9OqOLUcg9n0krrR3KrohstS9smTwEx9olyLYppvC0p5i7dAx2deWvM1ZxKNs0BvcXGukR+/g\" BCompare打开beyond compare会提示Trail Mode Error，此时选择Entry key，并输入以下内容--- BEGIN LICENSE KEY ---GXN1eh9FbDiX1ACdd7XKMV7hL7x0ClBJLUJ-zFfKofjaj2yxE53xauIfkqZ8FoLpcZ0Ux6McTyNmODDSvSIHLYhg1QkTxjCeSCk6ARz0ABJcnUmd3dZYJNWFyJun14rmGByRnVPL49QH+Rs0kjRGKCB-cb8IT4Gf0Ue9WMQ1A6t31MO9jmjoYUeoUmbeAQSofvuK8GN1rLRv7WXfUJ0uyvYlGLqzq1ZoJAJDyo0Kdr4ThF-IXcv2cxVyWVW1SaMq8GFosDEGThnY7C-SgNXW30jqAOgiRjKKRX9RuNeDMFqgP2cuf0NMvyMrMScnM1ZyiAaJJtzbxqN5hZOMClUTE+++--- END LICENSE KEY -----设置桌面应用sudo cp {install_dir}/lib64/beyondcompare/help/bclogo.png /usr/share/icons/sudo vim /usr/share/applications/bcompare.desktop输入以下内容[Desktop Entry]Name=beyond-compareComment=beyond compareExec=/home/znan/Userware/bcompare/bin/bcompare %UTerminal=falseType=ApplicationIcon=bclogoCategories=Office;MimeType=" }, { "title": "解决github下载缓慢", "url": "/get-github-files.html", "category":"wiki", "date":"2019-10-19 00:00:00 +0800", "thumb":"/img/in-post/thumbs/wiki.png?imageView2/1/w/140/h/140/q/90", "tags":["github","git"], "images":0, "content":"前言从github上git clone太缓慢，实在是忍受不了，但是又没有钱买vpn，于是想了一个折中的办法，从gitee上操作操作过程注册gitee账号点击新建项目按钮选择从github中导入等待导入完成，从gitee上git clone项目基本上以上几个步骤就可以从github上成功clone文件了，什么修改hosts文件，都是假的，我就从来没有成功过。其他如果想让代码继续在github上托管，则进行以下几个步骤即可，如果不进行以下步骤，则提交代码时会提交到码云git remote -v#查看远程分支情况git remote rm [name]#删除已经存在的远程地址，此处应该是gitee地址git remote add [name] [url]#添加新的远程地址，此处应该是github的地址，https和ssh均可git pull [name] master #拉取新的远程地址代码,name是本地添加的，master是远程分支，视情况更改" }, { "title": "windows-ssh运行脚本", "url": "/windows-ssh-script.html", "category":"wiki", "date":"2019-08-12 00:00:00 +0800", "thumb":"/img/in-post/thumbs/win.png?imageView2/1/w/140/h/140/q/90", "tags":["ssh","vbs","windows"], "images":2, "content":"起因由于经常在windows环境下工作，需要连linux服务器，之前用的xshell过期了，然后其他工具用不习惯，就打算自己开发一个脚本来直接连ssh服务器，故有此文开发环境ssh命令支持（cmder工具或者openssh+windows自带的cmd均可）vbs环境支持cmder是一款模仿linux的windows工具，很好用，可以按照这个链接(cmder工具)来下载学习操作，里面包含ssh，git等工具，不需要额外下载，很方便如果使用自带的cmd，则需要下载openssh，配置ssh环境才能使用，可以按照这个链接(openssh),拉倒最底下下载ssh基本命令用ssh命令行连接linux服务器主要是以下命令ssh username@host输入此命令后再输入密码就可以了，因此脚本的思路也是这样实现，最主要的难点是，如何在windows环境下读取命令行当前的状态，即是否在等待输入密码，对于这个问题，博主尝试了很多办法，比如类似于linux的expect，python脚本等，都无法实现，总会有这样那样的问题，最后是参考leoluo同学的vbs脚本实现的linux服务器环境如下(用的是centos虚拟机):主要是看ip地址和用户名cmder用ssh连linux服务器操作如图:第一次连接时，会出现yes/no操作，输入yes即可，然后再输入密码即可具体实现根据上面的连接过程，脚本主要代码如下:set ws = createobject(\"wscript.shell\")ws.run \"cmder.exe\"wscript.sleep 800ws.SendKeys \"+\"ws.SendKeys \"ssh root@192.168.93.128\"ws.SendKeys \"{enter}\"wscript.sleep 800ws.SendKeys \"root\" ws.SendKeys \"{enter}\"vbs有一个很诡异的地方，就是sendkey操作，默认是跟随系统语言设定输入法的，所以需要在输入命令前切换为英文输入法，即ws.SendKeys “+”具体vbs的相关命令操作，可以参考博文VBScript中SendKeys的妙用如果你使用的是cmd+openssh的方式的话，需要将ws.run “cmder.exe” 改为 ws.run “cmd.exe”使用的是cmder方式，则需要设置cmder环境变量如何使用双击即可，或者可以通过命令行cd vbs脚本所在目录wcsript //e:vbscript ssh.vbs" }, { "title": "cpp-显式类型转换", "url": "/cpp-type-transfer.html", "category":"tech", "date":"2019-08-11 00:00:00 +0800", "thumb":"/img/in-post/thumbs/cpp.png?imageView2/1/w/140/h/140/q/90", "tags":["cpp","显式类型转换"], "images":0, "content":"分类c++存在四种显式类型转换，分别是static_cast 静态转换dynamic_cast 动态转换const_cast 常量转换reinterpret_cast 强制转换static_cast简介任何具有明确定义的类型转换，只要不包含底层const，都可以使用static_cast.如int i, j;double slope = static_cast(j)/i使用场景把较大的算术类型赋值给较小的类型时，static_cast非常有用。此情况下一般会损失精度，使用static_cast类型转换后，告警信息就会消失对于编译器无法自动执行的类型转换也非常有用，如可以用static_cast找回存在于void*指针void p = &amp;d;double *dp = static_cast&lt;double&gt;(p);转换的结果与原始地址相等，因此必须保证转换后的类型就是指针所指的类型dynamic_cast简介用于将基类的指针或引用安全的转换成派生类的指针活引用使用形式如下:dynamic_cast&lt;type*&gt;(e);dynamic_cast&lt;type&amp;&gt;(e);dynamic_cast&lt;type&amp;&amp;&gt;(e);使用场景基类的函数不是虚函数，但是基类的指针需要执行派生类定义的函数时假设Base类至少包含一个虚函数，Derived是Base的公有派生类，如果有一个指向Base的指针bp，则我们可以在运行时将其转换成指向Derived的指针，具体代码如下:if(Derived dp = dynamic_cast&lt;Derived&gt;(bp)){//使用dp指向的Derived对象}else{//使用bp指向的Base对象}const_cast简介const_cast只能改变运算对象底层的constconst char pc;char *p = const_cast&lt;char&gt;(pc);如果对象本身不是一个常量，使用强制类型转换获得读写权限是合法行为，如果对象是一个常量，再使用const_cast执行读写操作会产生未定义的后果使用场景用户有函数重载的上下文中reinterpret简介通常为运算对象的位模式提供较低层次上的重新解释使用场景尽量不要使用，使用时必须对涉及的类型和编译器实现转换的过程都非常了解" }, { "title": "linux插入外置键盘禁用笔记本键盘", "url": "/keyboard.html", "category":"wiki", "date":"2019-05-05 00:00:00 +0800", "thumb":"/img/in-post/thumbs/linux.png?imageView2/1/w/140/h/140/q/90", "tags":["ubuntu","键盘","blog"], "images":1, "content":"前言由于博主买了一个poker 2放置在笔记本键盘上正好，但是如果两个键盘共存，则会严重影响使用，于是博主就想，能否在插入外置键盘时，屏蔽笔记本本身的键盘，于是便上网查了一下对于外置设备搜索和禁用的命令，编写了Python脚本，实现了这个功能。shell命令主要用到的几个命令有以下几个xinput listxinput floatxinput reattachxinput list 主要用来查看本电脑所用到的外接设备从中我们可以看到我使用了两个键盘，一个是本地的 2 keyboard，一个是poker，而且 AT Translated键盘已经被禁用了。xinput float是用来禁用设备的，在命令行输入xinput float [设备名称] 就可以禁用设备了，同时，xinput reattach是重新使用设备，与float功能相反。代码思路用xinput list命令查看当前是否存在外置键盘，如果存在则将内置键盘float起来，如果不存在，则将内置键盘reattach起来就可以了。该命令要重复不断执行，则可以使用一个进程进行维护，可以用sleep函数间隙性扫描。代码实现是用Python实现这个功能的，代码如下#!/usr/bin/python__author__ = 'znfang'import reimport subprocessimport timeimport signalkbid = re.compile('(?&lt;=id=)\\d+', re.I)masterid = re.compile('\\d+(?=\\)\\])', re.I)KB_ID = -1MASTER_ID = -1def signal_handler(signal, frame):subprocess.getoutput('xinput reattach ' + str(KB_ID) + ' ' + str(MASTER_ID))exit()signal.signal(signal.SIGINT, signal_handler)def getStatus():global KB_ID, MASTER_IDoutput_master = subprocess.getoutput('xinput list|grep \"AT Translated\"')output_ikb = subprocess.getoutput('xinput list|grep \"Technology Poker\"|tail -n1')masterOk = re.match('.*slavekeyboard.*', output_master) is not NonemasterDis = re.match('.*floating slave.*', output_master) is not NoneikbOK = re.match('.*slavekeyboard.*', output_ikb) is not NoneikbNo = len(output_ikb) == 0if masterOk and ikbOK:s = re.search(kbid_pattern, output_in)KB_ID = s.group(0)s = re.search(masterid_pattern, output_in)MASTER_ID = s.group(0)print('xinput float ' + str(KB_ID))subprocess.getoutput('xinput float ' + str(KB_ID))return 1elif masterOk and ikbNo:return 0elif masterDis and ikbOK:return 2elif masterDis and ikbNo:print('xinput reattach ' + str(KB_ID) + ' ' + str(MASTER_ID))subprocess.getoutput('xinput reattach ' + str(KB_ID) + ' ' + str(MASTER_ID))return 3if __name__ == '__main__':while True:status = getStatus()time.sleep(2)" }, { "title": "jekyll搭建github个人博客", "url": "/jekyll-github-blog.html", "category":"wiki", "date":"2019-05-01 00:00:00 +0800", "thumb":"/img/in-post/thumbs/wiki.png?imageView2/1/w/140/h/140/q/90", "tags":["blog"], "images":9, "content":"写在前面花了大概两天的时间把这个博客搭建好了，那么第一篇博客就献给如何搭建这个博客吧。首先要感谢fooleap提供的模板，本博客在原有的基础上做了一部分修改。喜欢这种简单的风格。同时还参考了Hux的一部分代码另外转载请注明来源，尊重别人的劳动成果。如果使用我的模板的话，麻烦给个star可以吧其实用jekyll搭建github的个人博客无非分为以下几个步骤生成自己的个人博客主页修改相关配置安装相关博客插件下面讲对此一一讲解生成自己的博客主页注册github账号这一步应该不用多说吧。相信来看这个博客的人，应该都有了自己的同性交友网站的账号了。fork模板这一步你可以fork我的模板，当然你也可以fork上述我参考的jekyll官方模板,或者其他任何人的模板可以参照下列步骤进行修改repo名字fork之后，你会在自己的github账号下看到有这个repo，然后最后一个点击settings进入setting界面后，修改repo的名字，将其修改为 你的githu账号名.github.io的形式。如我的修改为znfang.github.io如果一切顺利的话，在浏览器中输入你刚刚输入的repo的名字，就可以看到我内容状态了，如我输入znfang.github.io。至此，自己的博客主页就已经生成完毕。接下来就是使用git配置自己的个人博客了。一不小心404上面都是正常的情况，如果你是正常的，那就直接跳过这一步，进行下一步的内容，但是如果你一不小心，打开那个地址时是404，那么请检查这几个内容repo名字是否设置正确检查是否存在master分支在setting界面，查看github pages选项是否显示正常查看CNAME文件中是否存在其他域名，如果有，则删除CNAME中的域名或者替换成自己买的域名如果上述几个选项都正常还404，那我也不知道了修改相关配置git clone repo这一步应该不需要多说，将自己账号下的repo，clone到本地进行修改.注意:不要fork我的repo，否则后面push的时候，就一直提醒发到我的repo了安装jekyll为了便于在本地调试，先把jekyll环境装好，安装jekyll环境，每种操作系统的安装步骤都不相同，本文由于是在linux操作系统下完成的，因此只说明linux系统下如何安装jekyllsudo apt-get install make build-essentialsudo apt-get install ruby ruby-dev在~/.bashrc或者~/.zshrc中添加export GEM_HOME=$HOME/gemsexport PATH=$HOME/gems/bin:$PATH使用gem安装jekyll和bundlegem install bundlergem install jekyll具体的安装教程可以参考云网牛站的操作安装好jekyll之后，可以进入到刚刚git clone下来的repo，比如作者的目录是/home/znfang/Documents/blog/znfang.github.io进入目录后，在此目录下打开终端，在终端中输入jekyll s或者jekyll server如果是低版本或者本地存在多个版本，则可以用bundle exec jekyll server这两个命令是等价的。用此来启动服务器，如果不出意外是没有任何错误提示的，如果提示minima-theme can not found，可以在终端输入gem install minima-theme或者出现其他的组件没有安装，则根据报错提示进行百度或者谷歌排查如果警告gems已经被替换成plugins，则打开_config.yml文件，找到gems，将gems替换成pulgins即可，最中修改后的代码为# Gemsplugins: [jekyll-paginate]如果启动jekyll服务器时，没有任何错误，则可以在浏览器中输入localhost:4000或者127.0.0.1:4000此时你应该可以看到博客界面，当然这个界面的内容都是别人的，如果你fork的是我的模板，则看到的应该是下面这个图，你需要修改相关的配置，使它成为你自己的网站架构主要结构如下，看不懂是吧，我一开始也看不懂，但是我们可以在修改的过程中，去了解它。常用到的内容有[1]_config.ymlimg_includes_layouts_post下面将逐一介绍该怎么使用这些文件修改配置修改_config.ymlconfig.yml文件主要是一些定义网站一些基本的东西，这个地方，你可以把所有关于其他人信息的东西修改成自己的。应该不需要多讲，一些英文描述都是很清楚的，有三个地方不要动，一个是Baidu Analytics，一个是Google Analytics，还有一个是disqus_username。这三个插件后面将会讲到，这个地方先不要动。修改完成后，可以在本地看到相关的更新，如果要在域名上看到更新，则用git commit后，再用git push到远程分支即可。修改_includes文件夹这个文件夹下几个文件，只需要修改一个footer.html文件即可。这个文件只需要修改两个地方将&lt;script async src=”//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js”&gt;&lt;/script&gt;替换成&lt;script async src=”//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js”&gt;&lt;/script&gt;调整你的博客初始运行的时间。这里有个bug，已经在代码中进行了注释这两个是统计本站点访问的人数以及博客运行的时间，就是最底下的显示。修改about.mdabout.md是个人介绍，这个地方根据自己的兴趣修改。修改img文件夹这个文件夹放置的是博客使用的背景，以及文章中使用的图片（放置在img/in-post/文件夹下）。这个可根据自己的喜好修改。这个地方由于本博客主题页面限制问题，在插入图片时最好采用尾注的方式进行设置图片宽度。总之，以上的文件修改的目的就是将别人的信息替换成自己的。一切以个人为准_post文件夹这个文件夹是用来存放个人博客的，一般文件格式为’yyyy-mm-dd-‘文件名称’.md’插件安装插件主要安装三个插件，一个是百度站点统计，一个是谷歌站点统计，一个是disqus评论百度站点统计打开百度数据统计网站，注册后，进入后打开管理界面，选择网站列表，点击新增网站.根据自己的情况填写内容填写好后，点击获取代码，复制hm.src这一行的最后一大串的数字和字母组成的编码，从问号开始，到最后。将其粘贴到_config.yml文件中的ba_track_id后面的值。如果要查看效果，则需要将代码push到远程repo谷歌站点统计同样的注册谷歌统计的账号，拿到track_id后，修改_config.yml文件即可disqus评论插件首先到disqus注册账号，注册完之后进入下面这个页面，如果没有进入的话，可以点右上角设置，add disqus to site 进入进入后填入相关信息，注意在short web中填入你github的username，比如我的是znfang，进入下一步后，选择jekyll，并且在setting界面，讲用户名设为你的github的username，然后打开_config.yml,将disqus_username修改为你自己的名字即可。注意:使用disqus插件时，需要vpn，不然可能显示不成功至此就是整个的个人博客的搭建。然后开启自己的博客之旅吧参考资料" } ]
